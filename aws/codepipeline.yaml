AWSTemplateFormatVersion: '2010-09-09'
Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          Ref: S3BuildBucket
      Name:
        Ref: AWS::StackName
      RestartExecutionOnUpdate: false
      RoleArn:
        Ref: CodePipelineRole
      Stages:
        - Name: Source
          Actions:
            - Name: SourceLocation
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner:
                  Ref: GitHubOwner
                Repo:
                  Ref: GitHubRepo
                Branch:
                  Ref: GitHubBranch
                OAuthToken:
                  Ref: GitHubOAuthToken
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: PostBuildOutput
              Configuration:
                ProjectName:
                  Ref: Project
        - Name: StageChangeSet
          Actions:
            - Name: stage-changeset
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              InputArtifacts:
                - Name: PostBuildOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: codepipeline-generated-changeset
                Capabilities: CAPABILITY_IAM
                TemplatePath: PostBuildOutput::serverless.packaged.yml
                RoleArn:
                  Ref: CloudformationDeploymentRole
                StackName:
                  Fn::Join:
                    - "-"
                    - - production
                      - Ref: AWS::StackName
                      - deployment
                ParameterOverrides:
                  Fn::Sub:
                    '{
                  "ExistingResourcesStack":"${ProductionExistingResourcesStack}",
                  "NodeEnvironment":"production"
                }'
              OutputArtifacts: []
        - Name: Approval
          Actions:
            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: '1'
                Provider: Manual
              InputArtifacts: []
              OutputArtifacts: []
              Configuration: {}
        - Name: Deploy
          Actions:
            - Name: deploy-cloud-formation
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              InputArtifacts: []
              OutputArtifacts: []
              Configuration:
                StackName:
                  Fn::Join:
                    - "-"
                    - - production
                      - Ref: AWS::StackName
                      - deployment
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: codepipeline-generated-changeset
  Project:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Ref: AWS::StackName
      Artifacts:
        Packaging: NONE
        Type: CODEPIPELINE
        Name:
          Ref: AWS::StackName
      Description:
        Fn::Join:
          - " "
          - - Generated by Stack Named
            - Ref: AWS::StackName
      EncryptionKey:
        Fn::Join:
          - ":"
          - - arn:aws:kms
            - Ref: AWS::Region
            - Ref: AWS::AccountId
            - alias/aws/s3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image:
          Ref: CodeBuildImage
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value:
              Ref: AWS::AccountId
          - Name: AWS_STACK_NAME
            Value:
              Ref: AWS::StackName
          - Name: S3_BUCKET_NAME
            value:
              Ref: S3BuildBucket
      ServiceRole:
        Ref: CodeBuildProjectRole
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10

  S3BuildBucket:
    Type: AWS::S3::Bucket

  CodeBuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
          - "-"
          - - Ref: AWS::StackName
            - code-build-project-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: code-build-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - Fn::Join:
                      - ":"
                      - - arn:aws:logs
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - log-group
                        - Fn::Join:
                            - ''
                            - - "/aws/codebuild/"
                              - "*"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource:
                  - Fn::Join:
                      - "-"
                      - - arn:aws:s3:::codepipeline
                        - Ref: AWS::Region
                        - "*/*"
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
        - PolicyName: build-bucket-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - Fn::Join:
                      - ''
                      - - arn:aws:s3:::lambda-builds-
                        - Ref: AWS::Region
                        - "-"
                        - Ref: AWS::AccountId
                        - "/"
                        - "*"
                        - "/*"
        - PolicyName: ecr-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: "ecr:*"
                Resource: "*"
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
          - "-"
          - - Ref: AWS::StackName
            - code-pipeline-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: pipeline-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  Fn::Join:
                    - ":"
                    - - arn:aws:codebuild
                      - Ref: AWS::Region
                      - Ref: AWS::AccountId
                      - Fn::Join:
                          - "/"
                          - - project
                            - "*"
                Effect: Allow
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
                  - arn:aws:s3:::elasticbeanstalk*
                Effect: Allow
              - Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: "*"
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: "*"
                Effect: Allow
              - Action:
                  - apigateway:*
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
              - Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: "*"
                Effect: Allow
              - Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                Resource: "*"
                Effect: Allow
  CloudformationDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
          - "-"
          - - Ref: AWS::StackName
            - cloudformation-deployment-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: pipeline-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
                  - arn:aws:s3:::elasticbeanstalk*
                Effect: Allow
              - Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: "*"
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: "*"
                Effect: Allow
              - Action:
                  - apigateway:*
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - elasticache:*
                  - sns:*
                  - kinesis:*
                  - firehose:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                  - dynamodb:*
                  - states:*
                  - es:*
                  - logs:*
                  - ecr:*
                  - cloudfront:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - iam:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - lambda:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                Resource: "*"
                Effect: Allow
              - Action:
                  - events:*
                Resource: "*"
                Effect: Allow

Parameters:
  GitHubOwner:
    Description: Name of organization for the repo (e.x. actionably)
    Type: String
    Default: actionably
  GitHubRepo:
    Description: Name of the github repo (e.x. bot-analytics-tracker
    Type: String
    Default: lambda-supportbot-app
  GitHubBranch:
    Description: branch to build
    Type: String
    Default: master
  GitHubOAuthToken:
    Description: oauth token with authorization to the repo
    Type: String
    NoEcho: true
  CodeBuildImage:
    Description: Information to code build about what image to use for the build
    Type: String
    AllowedValues:
      - aws/codebuild/standard:1.0
    Default: aws/codebuild/standard:1.0
  ProductionExistingResourcesStack:
    Description: Name of the production existing resources stack see the dasbhbot-infrastructure
      project there needs to be a stack with this name existing in your region
    Type: String
    AllowedValues:
      - production-existing-resources
      - testing-existing-resources
    Default: production-existing-resources
  StagingExistingResourcesStack:
    Description: Name of the production existing resources stack see the dasbhbot-infrastructure
      project there needs to be a stack with this name existing in your region
    Type: String
    AllowedValues:
      - staging-existing-resources
      - testing-existing-resources
    Default: staging-existing-resources
Outputs: {}